{"version":3,"sources":["components/ChampionCard/ChampionCard.js","redux/actions/profiles.js","redux/actions/types.js","components/Selection/Selection.js","components/Searchbar/Searchbar.js","redux/actions/champions.js","components/ProfileAction/ProfileAction.js","components/Menu/Menu.js","components/Main/Main.js","redux/reducers/champions.js","redux/reducers/profiles.js","redux/reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","filterInput","champions","toggleChampion","championId","dispatch","a","type","payload","err","console","log","champData","id","name","chestAvaliable","isDisabled","toUpperCase","includes","className","src","alt","onClick","Selection","data","title","Object","values","map","key","updateFilter","textInput","useEffect","value","onChange","e","target","placeholder","current","profiles","resetProfile","fetch","res","json","JSON","parse","localStorage","getItem","removeProfile","addProfile","profileTitle","axios","get","uuidv4","selectProfile","profile","useState","setProfileTitle","maxLength","disabled","length","fetchProfileData","fetchCurrentData","initalState","initialState","combineReducers","action","updatedProfiles","setItem","stringify","updatedChampion","undefined","updatedProfile","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.88612570.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './championcard.css';\nimport { connect } from 'react-redux';\nimport { toggleChampion } from '../../redux/actions/profiles';\n\nconst ChampionCard = ({\n  champData: { id, name, chestAvaliable },\n  toggleChampion,\n  filterInput\n}) => {\n  const isDisabled =\n    (id && id.toUpperCase().includes(filterInput)) ||\n    name.toUpperCase().includes(filterInput)\n      ? ''\n      : 'disabled';\n\n  return (\n    <div\n      className={`champion-card ${isDisabled} ${\n        chestAvaliable === false ? 'bg-green' : ''\n      }`}\n    >\n      <img\n        src={`http://ddragon.leagueoflegends.com/cdn/10.7.1/img/champion/${id}.png`}\n        alt={name}\n        className={`${chestAvaliable === false ? 'disabled' : ''}`}\n        onClick={() => toggleChampion(id)}\n      />\n    </div>\n  );\n};\n\nChampionCard.propTypes = {\n  champData: PropTypes.object.isRequired,\n  toggleChampion: PropTypes.func.isRequired,\n  filterInput: PropTypes.string\n};\n\nconst mapStateToProps = state => ({ filterInput: state.champions.filterInput });\n\nexport default connect(mapStateToProps, { toggleChampion })(ChampionCard);\n","import { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nimport {\n  FETCH_PROFILE_DATA,\n  FETCH_CURRENT_DATA,\n  ADD_PROFILE,\n  SELECT_PROFILE,\n  TOGGLE_CHAMPION,\n  RESET_PROFILE,\n  REMOVE_PROFILE,\n} from './types';\n\nexport const fetchProfileData = () => async (dispatch) => {\n  try {\n    if (localStorage.getItem('profiles')) {\n      const payload = await JSON.parse(localStorage.getItem('profiles'));\n      dispatch({ type: FETCH_PROFILE_DATA, payload });\n    } else {\n      return;\n    }\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n\nexport const fetchCurrentData = () => async (dispatch) => {\n  try {\n    if (localStorage.getItem('current')) {\n      const payload = await JSON.parse(localStorage.getItem('current'));\n      dispatch({ type: FETCH_CURRENT_DATA, payload });\n    } else {\n      return;\n    }\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n\nexport const addProfile = (profileTitle) => async (dispatch) => {\n  try {\n    // const res = await fetch(\n    //   'http://ddragon.leagueoflegends.com/cdn/10.7.1/data/en_US/champion.json'\n    // );\n    // const data = await res.json();\n\n    const res = await axios.get(\n      'http://ddragon.leagueoflegends.com/cdn/10.7.1/data/en_US/champion.json'\n    );\n\n    const payload = {\n      id: uuidv4(),\n      title: profileTitle,\n      champions: res.data.data,\n    };\n\n    dispatch({ type: ADD_PROFILE, payload });\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n\nexport const selectProfile = (profile) => async (dispatch) => {\n  try {\n    dispatch({ type: SELECT_PROFILE, payload: profile });\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n\nexport const toggleChampion = (championId) => async (dispatch) => {\n  try {\n    dispatch({ type: TOGGLE_CHAMPION, payload: championId });\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n\nexport const resetProfile = () => async (dispatch) => {\n  try {\n    const res = await fetch(\n      'https://ddragon.leagueoflegends.com/cdn/10.7.1/data/en_US/champion.json'\n    );\n\n    const data = await res.json();\n\n    const current = await JSON.parse(localStorage.getItem('current'));\n    const payload = { ...current, champions: data.data };\n\n    dispatch({ type: RESET_PROFILE, payload });\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n\nexport const removeProfile = () => async (dispatch) => {\n  try {\n    const current = await JSON.parse(localStorage.getItem('current'));\n\n    dispatch({ type: REMOVE_PROFILE, payload: current.id });\n  } catch (err) {\n    console.log('Opps. Something went wrong.', err);\n  }\n};\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\nexport const TOGGLE_CHAMPION = 'TOGGLE_CHAMPION';\nexport const RESET_PROFILE = 'RESET_PROFILE';\nexport const FETCH_PROFILE_DATA = 'FETCH_PROFILE_DATA';\nexport const FETCH_CURRENT_DATA = 'FETCH_CURRENT_DATA';\nexport const ADD_PROFILE = 'ADD_PROFILE';\nexport const EDIT_PROFILE = 'EDIT_PROFILE';\nexport const REMOVE_PROFILE = 'REMOVE_PROFILE';\nexport const SELECT_PROFILE = 'SELECT_PROFILE';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChampionCard from '../ChampionCard/ChampionCard';\nimport './selection.css';\n\nconst Selection = ({ data: { title, champions } }) => {\n  return (\n    <>\n      <h1>{title}</h1>\n      <div className='selection'>\n        {champions &&\n          Object.values(champions).map(champData => (\n            <div key={champData.id}>\n              <ChampionCard champData={champData} />\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nSelection.propTypes = {\n  data: PropTypes.object\n};\n\nexport default Selection;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './searchbar.css';\nimport { connect } from 'react-redux';\nimport { updateFilter } from '../../redux/actions/champions';\n\nconst Searchbar = ({ updateFilter, filterInput }) => {\n  useEffect(() => {\n    updateFilter(filterInput);\n  }, [updateFilter, filterInput]);\n\n  return (\n    <div className='searchbar'>\n      <input\n        type='text'\n        value={filterInput}\n        onChange={e => updateFilter(e.target.value)}\n        placeholder='SEARCH CHAMPION E.G. ZYRA'\n      />\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  updateFilter: PropTypes.func.isRequired,\n  filterInput: PropTypes.string\n};\n\nconst mapStateToProps = state => ({ filterInput: state.champions.filterInput });\n\nexport default connect(mapStateToProps, { updateFilter })(Searchbar);\n","import { UPDATE_FILTER } from './types';\n\nexport const updateFilter = textInput => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_FILTER,\n      payload: textInput\n    });\n  } catch (err) {\n    console.log('Opps. Something went wrong.');\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { resetProfile, removeProfile } from '../../redux/actions/profiles';\nimport './profileAction.css';\n\nconst ProfileAction = ({ resetProfile, removeProfile, current }) => {\n  return (\n    <>\n      {current.id && (\n        <div className='profile-action'>\n          {/* <input\n            type='submit'\n            onClick={resetProfile}\n            className='warning'\n            value='RESET'\n          />\n          <input\n            type='submit'\n            onClick={removeProfile}\n            className='danger'\n            value='DELETE'\n          /> */}\n          <div className='btn action-btn warning' onClick={resetProfile}>\n            RESET\n          </div>\n          <div className='btn action-btn danger' onClick={removeProfile}>\n            DELETE\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nProfileAction.propTypes = {\n  resetProfile: PropTypes.func.isRequired,\n  removeProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ current: state.profiles.current });\n\nexport default connect(mapStateToProps, { resetProfile, removeProfile })(\n  ProfileAction\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './menu.css';\nimport { connect } from 'react-redux';\nimport { addProfile, selectProfile } from '../../redux/actions/profiles';\n\nconst Menu = ({\n  profiles: { profiles, current },\n  addProfile,\n  selectProfile,\n}) => {\n  const [profileTitle, setProfileTitle] = useState('');\n\n  const handleSubmit = () => {\n    addProfile(profileTitle);\n    setProfileTitle('');\n  };\n\n  return (\n    <div className='menu'>\n      <div>\n        <h1>PROFILES</h1>\n        <br />\n        <hr />\n        <br />\n        <div className='form-group'>\n          <input\n            type='text'\n            maxLength={16}\n            value={profileTitle}\n            placeholder='CREATE A PROFILE'\n            onChange={(e) => setProfileTitle(e.target.value)}\n          />\n          <button\n            className='btn add-btn success'\n            disabled={profileTitle.length < 1}\n            onClick={handleSubmit}\n          >\n            +\n          </button>\n        </div>\n        <br />\n        <hr />\n        <br />\n        <ul>\n          {profiles &&\n            profiles.map((profile) => (\n              <li\n                key={profile.id}\n                className={current.id === profile.id ? 'active' : ''}\n                onClick={() => selectProfile(profile)}\n              >\n                {profile.title}\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMenu.propTypes = {\n  addProfile: PropTypes.func.isRequired,\n  profiles: PropTypes.object,\n};\n\nexport default connect(null, { addProfile, selectProfile })(Menu);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './main.css';\nimport { connect } from 'react-redux';\nimport { fetchProfileData } from '../../redux/actions/profiles';\nimport { fetchCurrentData } from '../../redux/actions/profiles';\n\nimport Selection from '../Selection/Selection';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ProfileAction from '../ProfileAction/ProfileAction';\nimport Menu from '../Menu/Menu';\n\nconst Main = ({ fetchProfileData, fetchCurrentData, profiles }) => {\n  useEffect(() => {\n    fetchProfileData();\n    fetchCurrentData();\n  }, [fetchProfileData, fetchCurrentData]);\n\n  return (\n    <div className='main'>\n      <Menu profiles={profiles} />\n      <div className='content'>\n        <Searchbar />\n        {!profiles.profiles.length ? (\n          <div>NO PROFILE FOUND. CREATE A PROFILE TO GET STARTED!</div>\n        ) : (\n          ''\n        )}\n        <Selection data={profiles.current} />\n        <ProfileAction />\n      </div>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  profiles: PropTypes.object.isRequired,\n  fetchCurrentData: PropTypes.func.isRequired,\n  fetchProfileData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profiles\n});\n\nexport default connect(mapStateToProps, {\n  fetchProfileData,\n  fetchCurrentData\n})(Main);\n","import { UPDATE_FILTER } from '../actions/types';\n\nconst initalState = {\n  champions: {},\n  filterInput: ''\n};\n\nexport default function(state = initalState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case UPDATE_FILTER:\n      return { ...state, filterInput: payload.toUpperCase() };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_PROFILE_DATA,\n  FETCH_CURRENT_DATA,\n  ADD_PROFILE,\n  SELECT_PROFILE,\n  TOGGLE_CHAMPION,\n  RESET_PROFILE,\n  REMOVE_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n  profiles: [],\n  current: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  // I was using const updatedProfile but b/c i cannot manipulate this in other switch block and cannot come up with a better naming\n  // Any suggestions is appericated\n  let updatedProfiles: [];\n\n  switch (type) {\n    case FETCH_PROFILE_DATA:\n      return { ...state, profiles: payload };\n    case FETCH_CURRENT_DATA:\n      return { ...state, current: payload };\n    case ADD_PROFILE:\n      localStorage.setItem(\n        'profiles',\n        JSON.stringify([...state.profiles, payload])\n      );\n\n      localStorage.setItem('current', JSON.stringify(payload));\n\n      return {\n        ...state,\n        profiles: [...state.profiles, payload],\n        current: payload\n      };\n    case SELECT_PROFILE:\n      localStorage.setItem('current', JSON.stringify(payload));\n\n      return { ...state, current: payload };\n    case TOGGLE_CHAMPION:\n      const updatedChampion = {\n        [payload]: {\n          ...state.current.champions[payload],\n          chestAvaliable:\n            state.current.champions[payload].chestAvaliable !== undefined\n              ? !state.current.champions[payload].chestAvaliable\n              : false\n        }\n      };\n\n      const updatedProfile = {\n        ...state.current,\n        champions: { ...state.current.champions, ...updatedChampion }\n      };\n\n      updatedProfiles = state.profiles.map(profile => {\n        if (profile.id === updatedProfile.id) {\n          return updatedProfile;\n        } else {\n          return profile;\n        }\n      });\n\n      localStorage.setItem('profiles', JSON.stringify(updatedProfiles));\n\n      localStorage.setItem('current', JSON.stringify(updatedProfile));\n\n      return { ...state, current: updatedProfile, profiles: updatedProfiles };\n    case RESET_PROFILE:\n      updatedProfiles = state.profiles.map(profile => {\n        if (profile.id === payload.id) {\n          return payload;\n        } else {\n          return profile;\n        }\n      });\n\n      localStorage.setItem('profiles', JSON.stringify(updatedProfiles));\n\n      localStorage.setItem('current', JSON.stringify(payload));\n\n      return { ...state, current: payload, profiles: updatedProfiles };\n    case REMOVE_PROFILE:\n      updatedProfiles = state.profiles.filter(\n        profile => profile.id !== payload\n      );\n\n      const current = updatedProfiles[0] ? { ...updatedProfiles[0] } : {};\n\n      localStorage.setItem('profiles', JSON.stringify(updatedProfiles));\n\n      localStorage.setItem('current', JSON.stringify(current));\n\n      return { ...state, current, profiles: updatedProfiles };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport champions from './champions';\nimport profiles from './profiles';\n\nexport default combineReducers({ champions, profiles });\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n// const middleware = [];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport Main from './components/Main/Main';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}